---
# Questions for code quality features

# the main menu
SelectCodeQualityFeatures:
  when: "{{ template_profile != 'minimum' }}"
  type: yaml
  default: |-
    {% if template_profile == 'recommended' %}
      [AddLocalTests_flag, SelectGitHubActions_flag, AddLinting_flag, AddSonarCloud_flag, AddEditorConfig_flag, AddTyping_flag]
    {%- else -%}
      []
    {%- endif %}
  help: Select code quality features
  multiselect: true
  choices:
    Unit tests (using pytest):
      value: AddLocalTests_flag
      # validator: "{% if something != 'AnotherThing' %}BlaBla{% endif %}"
    GitHub Actions (select in the next step):
      value: SelectGitHubActions_flag
      # validator: "{% if something != 'AnotherThing' %}BlaBla{% endif %}"
    Linting:
      value: AddLinting_flag
      # validator: "{% if something != 'AnotherThing' %}BlaBla{% endif %}"
    Pre-commit:
      value: AddPreCommit_flag
      # validator: "{% if something != 'AnotherThing' %}BlaBla{% endif %}"
    Code analysis (using SonarCloud):
      value: AddSonarCloud_flag
      # validator: "{% if something != 'AnotherThing' %}BlaBla{% endif %}"
    Editorconfig:
      value: AddEditorConfig_flag
      # validator: "{% if something != 'AnotherThing' %}BlaBla{% endif %}"
    Typing (select type checker later):
      value: AddTyping_flag

# Sub-menus
SelectGitHubActions:
  when: "{{ 'SelectGitHubActions_flag' in SelectCodeQualityFeatures }}"
  type: yaml
  default: |-
    {% if template_profile == 'recommended' %}
      [AddGitHubActionBuild_flag]
    {%- else -%}
      []
    {%- endif %}
  help: Select GitHub Action workflows
  multiselect: true
  choices:
    Build:
      value: AddGitHubActionBuild_flag
      # validator: "{% if something != 'AnotherThing' %}BlaBla{% endif %}"
    Link checker (reports broken URLs):
      value: AddLinkCheck_flag
      # validator: "{% if something != 'AnotherThing' %}BlaBla{% endif %}"

AddTyping:
  type: bool
  default: "{{ 'AddTyping_flag' in SelectCodeQualityFeatures }}"
  when: false

SelectTypeChecker:
  when: "{{ template_profile != 'minimum' and AddTyping }}"
  type: str
  default: pyright
  help: Select a type checker
  choices:
    Mypy:
      value: mypy
    Pyright:
      value: pyright
    # TODO add pyrefly https://pyrefly.org/
    # TODO add ty https://github.com/astral-sh/ty

# TODO add runtime type checking (using pydantic or typeguard)

# TODO ask how strict to typecheck

# computed features
AddLocalTests:
  type: bool
  default: "{{
    'AddLocalTests_flag' in SelectCodeQualityFeatures
    or 'AddGitHubActionBuild_flag' in SelectGitHubActions
    or 'AddSonarCloud_flag' in SelectCodeQualityFeatures }}"
  when: false
AddGitHubActionBuild:
  type: bool
  default: "{{ 'AddGitHubActionBuild_flag' in SelectGitHubActions }}"
  when: false
AddLinkCheck:
  type: bool
  default: "{{ 'AddLinkCheck_flag' in SelectGitHubActions }}"
  when: false
AddPreCommit:
  type: bool
  default: "{{ 'AddPreCommit_flag' in SelectCodeQualityFeatures }}"
  when: false
AddSonarCloud:
  type: bool
  default: "{{ 'AddSonarCloud_flag' in SelectCodeQualityFeatures }}"
  when: false
AddLinting:
  type: bool
  default: "{{ 'AddLinting_flag' in SelectCodeQualityFeatures }}"
  when: false
AddEditorConfig:
  type: bool
  default: "{{ 'AddEditorConfig_flag' in SelectCodeQualityFeatures }}"
  when: false
